version: '3.8'

services:
  mysql:
    image: mysql:8.0.20
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./infra:/backup
    networks:
      - internal_network
    restart: unless-stopped
 
  budibase:
    image: budibase/budibase:2.11.41
    container_name: budibase
    ports:
      - "10000:80"
    networks:
      - internal_network
    restart: unless-stopped

  metabase:
    image: metabase/metabase
    container_name: metabase
    ports:
      - "3000:3000"
    networks:
      - internal_network
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    networks:
      - internal_network
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - internal_network
    restart: on-failure

  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: django
    ports:
      - "8000:8000"
    networks:
      - internal_network
    restart: unless-stopped
    volumes:
      - ./IA:/app/IA

  config:
    build:
      context: .
      dockerfile: infra/Dockerfile.python
    environment:
      MYSQL_ROOT_PASSWORD : ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE : ${MYSQL_DATABASE}
      MYSQL_USER : ${MYSQL_USER}
      MYSQL_PASSWORD : ${MYSQL_PASSWORD}
      MYSQL_HOST : ${MYSQL_HOST}
      MYSQL_PORT : ${MYSQL_PORT}
      MYSQL_FILE : ${MYSQL_FILE}
    container_name: configPy
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal_network

volumes: 
  portainer_data: 

networks:
  internal_network:
